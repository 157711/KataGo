
# Logs------------------------------------------------------------------------------------

logSearchInfo = false
logMoves = false
logGamesEvery = 10
logToStdout = true

# Data writing-----------------------------------------------------------------------------------

dataBoardLen = 19
maxDataQueueSize = 2000
maxRowsPerTrainFile = 25000
maxRowsPerValFile = 5000
firstFileRandMinProp = 0.15

validationProp = 0.00

# Fancy game selfplay settings--------------------------------------------------------------------
initGamesWithPolicy = true  # Play the first few moves of a game high-temperaturely from policy
forkSidePositionProb = 0.025  # With this probability, train on refuting bad alternative moves.

earlyForkGameProb = 0.05  # Fork to try alternative opening variety with this probability
earlyForkGameExpectedMoveProp = 0.025  # Fork roughly within the first (boardArea * this) many moves
earlyForkGameMinChoices = 3   # Choose from the best of at least this many random choices
earlyForkGameMaxChoices = 10  # Choose from the best of at most tthis many random choices

cheapSearchProb = 0.75  # Do cheap searches with this probaiblity
cheapSearchVisits = 100  # Number of visits for cheap search
cheapSearchTargetWeight = 0.0  # Training weight for cheap search
recordTreePositions = false  # Try recording positions from the MCTS search tree for training
recordTreeThreshold = 100  # Number of visits necessary in tree node
recordTreeTargetWeight = 0.1  # Training weight for tree positions

reduceVisits = true  # Reduce visits when one side is winning
reduceVisitsThreshold = 0.9  # How winning a side needs to be (winrate)
reduceVisitsThresholdLookback = 3  # How many consecutive turns needed to be that winning
reducedVisitsMin = 100  # Minimum number of visits (never reduce below this)
reducedVisitsWeight = 0.1  # Minimum training weight

policySurpriseDataWeight = 0.5  # This proportion of training weight should be concentrated on surprising moves

# startPosesProb = 0.0  # Play this proportion of games starting from SGF positions
# startPosesFromSgfDir = DIRECTORYPATH  # Load SGFs from this dir
# startPosesLoadProb = 1.0  # Only load each position from each SGF with this chance (save memory)
# startPosesTurnWeightLambda = 0  # 0 = equal weight  0.01 = decrease probability by 1% per turn  -0.01 = increase probability by 1% per turn.

switchNetsMidGame = true  # When a new neural net is loaded, switch to it immediately instead of waiting for new game

# Match-----------------------------------------------------------------------------------

numGameThreads = 128
maxMovesPerGame = 1600
numGamesTotal = 1000000000000

# Rules------------------------------------------------------------------------------------

koRules = SIMPLE,POSITIONAL,SITUATIONAL
scoringRules = AREA,TERRITORY
taxRules = NONE,NONE,SEKI,SEKI,ALL
multiStoneSuicideLegals = false,true
hasButtons = false,true

bSizes = 9,11,13,15,17,19,  10,12,14,16,18
bSizeRelProbs = 2,3,10,7,9,33, 2,4,6,8,10

komiAuto = True  # Automatically adjust komi to what the neural nets think are fair
# komiMean = 7.0 # Specify explicit komi
komiStdev = 1.0
handicapProb = 0.05
handicapCompensateKomiProb = 0.6  # In handicap games, adjust komi to fair with this probability
forkCompensateKomiProb = 0.9      # For forks and sgfs, adjust komi to fair with this probability
komiBigStdevProb = 0.05
komiBigStdev = 10.0

drawRandRadius = 0.5
noResultStdev = 0.166666666

# Search limits-----------------------------------------------------------------------------------

maxVisits = 600
numSearchThreads = 1

# GPU Settings-------------------------------------------------------------------------------

nnMaxBatchSize = 128
nnCacheSizePowerOfTwo = 21
nnMutexPoolSizePowerOfTwo = 14
numNNServerThreadsPerModel = 1
nnRandomize = true

# CUDA GPU settings--------------------------------------
# cudaDeviceToUse = 0 #use device 0 for all server threads (numNNServerThreadsPerModel) unless otherwise specified per-model or per-thread-per-model
# cudaDeviceToUseModel0 = 3 #use device 3 for model 0 for all threads unless otherwise specified per-thread for this model
# cudaDeviceToUseModel1 = 2 #use device 2 for model 1 for all threads unless otherwise specified per-thread for this model
# cudaDeviceToUseModel0Thread0 = 3 #use device 3 for model 0, server thread 0
# cudaDeviceToUseModel0Thread1 = 2 #use device 2 for model 0, server thread 1

cudaUseFP16 = true
cudaUseNHWC = true

# Search Randomization------------------------------------------------------------------------------
# Values in this section can be specified per-bot as well

chosenMoveTemperatureEarly = 0.8
chosenMoveTemperatureHalflife = 19
chosenMoveTemperature = 0.2
chosenMoveSubtract = 0
chosenMovePrune = 1

rootNoiseEnabled = true
rootDirichletNoiseTotalConcentration = 10.83
rootDirichletNoiseWeight = 0.25

rootDesiredPerChildVisitsCoeff = 2

useLcbForSelection = true
lcbStdevs = 5.0
minVisitPropForLCB = 0.15

# Internal params------------------------------------------------------------------------------
# Values in this section can be specified per-bot as well

winLossUtilityFactor = 1.0
staticScoreUtilityFactor = 0.00
dynamicScoreUtilityFactor = 0.40
dynamicScoreCenterZeroWeight = 0.25
dynamicScoreCenterScale = 0.50
noResultUtilityForWhite = 0.0
drawEquivalentWinsForWhite = 0.5

rootEndingBonusPoints = 0.5
rootPruneUselessMoves = true

rootPolicyTemperature = 1.1

cpuctExploration = 1.1
fpuReductionMax = 0.2
fpuUseParentAverage = true
valueWeightExponent = 0.5
visitsExponent = 1.0

mutexPoolSize = 64
numVirtualLossesPerThread = 1
